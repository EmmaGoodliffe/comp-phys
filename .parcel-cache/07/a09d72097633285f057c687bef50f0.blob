"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _p = _interopRequireDefault(require("p5"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

class Particle {
  constructor(_, m = 1) {
    this._ = _;
    this.m = m;
    this.s = _.createVector();
    this.v = _.createVector();
    this.a = _.createVector();
    this.w = 20 * m;
    this.hue = 192;
  }

  update() {
    const {
      _
    } = this;
    this.v.add(this.a);
    this.s.add(this.v);
    this.a = _.createVector();
  }

  draw() {
    const {
      _,
      s,
      a,
      w,
      hue
    } = this;

    const strokeCol = _.color(`hsl(${hue}, 100%, 50%)`);

    _.stroke(strokeCol);

    _.strokeWeight(2);

    const fillCol = _.color(`hsla(${hue}, 100%, 50%, 0.5)`);

    _.fill(fillCol);

    _.circle(s.x, s.y, w);

    _.strokeWeight(3);

    const arrow = new Arrow(_, s, a, w);
    arrow.draw();
  }

}

exports.default = Particle;

class Arrow {
  constructor(_, s, a, w) {
    this._ = _;
    this.s = s;
    this.line = a.copy().setMag(1.5 * w);
    this.tips = [this.createTip(1), this.createTip(-1)];
  }

  createTip(direction) {
    const {
      _
    } = this;
    const baseR = this.line.mag();

    const baseTheta = _.atan(this.line.y / this.line.x);

    const thetaAdjustment = 45 * direction;
    const theta = baseTheta + 180 + thetaAdjustment;
    const r = baseR / 4;

    const x = r * _.cos(theta);

    const y = r * _.sin(theta);

    const tip = _.createVector(x, y);

    return tip;
  }

  draw() {
    const {
      _,
      s
    } = this;

    _.line(s.x, s.y, s.x + this.line.x, s.y + this.line.y);

    for (const tip of this.tips) {
      const absLine = _p.default.Vector.add(s, this.line);

      _.line(absLine.x, absLine.y, absLine.x + tip.x, absLine.y + tip.y);
    }
  }

}